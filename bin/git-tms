#!/usr/bin/env perl

use strict;
use warnings;

use 5.006;
use v5.14.0;    # Before 5.006, v5.10.0 would not be understood.

use Getopt::Long qw{GetOptionsFromArray};
use List::Util   qw{any};

sub help {
    my ($rc, %optmap) = $_;
    my $verbs = join('|', keys(%optmap));
    print "USAGE:\n    git tms [$verbs] ...";
}

sub main {
    my @args = @_;

    my %options;
    my %optmap = (
        scan    => {
            positionals => [qw{shas}],
            callback    => \&scan_results,
            unreliable  => \$options{unreliable},
        },
        record  => {
            positionals => [qw{manual_test}],
            callback    => \&record_results,
            'covers=s@' => \$options{covers},
            'os=s'      => \$options{os},
            'at=s'      => \$options{at},
        },
        export  => {
            positionals => [qw{shas database}],
            callback    => \&export_results,
            append      => \$options{append},
        },
        results => {
            positionals => [qw{shas}],
            callback    => \&show_results,
            coverage    => \$options{coverage},
            raw         => \$options{raw},
            os          => \$options{os},
        },
    );

    my $command = shift(@args);

    return help(1, %optmap) unless any { $command eq $_ } keys(%optmap);

    my $positionals = delete $optmap{$command}{positionals};
    my %dispatch;
    foreach my $command (keys(%optmap)) {
        $dispatch{$command} = delete $optmap{$command}{callback};
    }

    GetOptionsFromArray(\@args,
        %{$optmap{$command}}
    );

    foreach my $positional (@$positionals) {
        $options{$positional} = shift(@args);
    }

    $dispatch{$command}->(%options);
}

# Processors

sub show_results {
    my %options = @_;
}

sub export_results {
    my %options = @_;
}

sub record_results {
    my %options = @_;
}

sub scan_results {
    my %options = @_;
}

exit main(@ARGV) unless caller;
1;
